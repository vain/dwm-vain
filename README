dwm - dynamic window manager
============================
dwm is an extremely fast, small, and dynamic window manager for X.


Requirements
------------
In order to build dwm you need the Xlib header files.


Installation
------------
Edit config.mk to match your local setup (dwm is installed into
the /usr/local namespace by default).

Afterwards enter the following command to build and install dwm (if
necessary as root):

    make clean install

If you are going to use the default bluegray color scheme it is highly
recommended to also install the bluegray files shipped in the dextra package.


Running dwm
-----------
Add the following line to your .xinitrc to start dwm using startx:

    exec dwm

In order to connect dwm to a specific display, make sure that
the DISPLAY environment variable is set correctly, e.g.:

    DISPLAY=foo.bar:1 exec dwm

(This will start dwm on display :1 of the host foo.bar.)

In order to display status info in the bar, you can do something
like this in your .xinitrc:

    while xsetroot -name "`date` `uptime | sed 's/.*,//'`"
    do
    	sleep 1
    done &
    exec dwm


Configuration
-------------
The configuration of dwm is done by creating a custom config.h
and (re)compiling the source code.


Extensions and changes of this fork
-----------------------------------

This fork is based on dwm-6.1. Major changes since then:

- Builtin function to re-execute dwm
- Included patches:
	- movestack
	- statusallmons
	- swapfocus
	- togglefullscreen
	- urgentborder
- Builtin layout for slinp (see https://github.com/vain/slinp)
- Double fork in spawn(): Child processes are now handed over to init
- Additional helper functions:
	- centerfloater
	- focusmonwarp: Focus another monitor and warp the mouse pointer to
	  the last selected client on that monitor
	- maximizefloater
	- modgap: Modify gap size at runtime
	- shiftview: View adjacent tags
	- tagrel: Send a client to adjacent tags
- Pointer barriers around the working area
- A separator line below/above the status bar
- drawbar:
	- Only show occupied tags (allows you to use *A LOT* of tags)
	- Additional colors for info areas (taglist and status)
- tile layout:
	- Made "nmaster" dynamic, so it's actually more like a grid layout:
	  Try to have as many clients in the master column as there are in
	  the slave column. ("nmaster_dynamic_max" is a limit to this.)
	- Support for useless gaps
- Per-rule resize hints
- Pixmap borders and pixmap title bars
- dirtomon is based on geometry rather than internal indices

For a full list, see the git log: "git log 1bdb393..HEAD"


A word on my window decorations
-------------------------------

Upstream dwm has only very basic window decorations, i.e. just the
single colored border. This leads to two problems:

 1. Java gets cranky: Menus are misaligned.
 2. Windows don't have title bars.

I don't care about Java that much but I consider title bars to be very
useful. They are not REQUIRED and I lived a long time without them, but
still, they are very, very useful. Pixmap borders are also much easier
on the eye (for me, at least).

To address #2, I added pixmap borders in mid 2014 and, with the power of
X11's SHAPE extension, title bars. This works -- mostly. It does not
work when a client tries to use the SHAPE extension by itself. In that
case, things just blow up. Recent versions of Chromium, for example,
expose this problem.

Long story short, a window manager should not fiddle with a client's
SHAPE. So, my title bars are actually a very dirty hack. They also lead
to a lot of complications in the code.

I'm working on a proper solution that fixes all these issues. For the
time being, the current pixmap-SHAPE borders will stay and I will add
further hackarounds to make them work better.
